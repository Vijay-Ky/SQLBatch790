CREATE TABLE PERSON(ID NUMBER, FIRST_NAME VARCHAR(90), AGE NUMBER);

DESC PERSON;

INSERT INTO PERSON VALUES(1, 'VIJAY', 22);

INSERT INTO PERSON VALUES(2, 'MANU', 25);
INSERT INTO PERSON VALUES(3, 'ARUN', 26);
INSERT INTO PERSON VALUES(4, 'KUMAR', 28);
INSERT INTO PERSON VALUES(5, 'KIRAN', 25);
INSERT INTO PERSON VALUES(6, 'JYOTHI', 20);
INSERT INTO PERSON VALUES(7, 'RAMU', 35);

SELECT * FROM PERSON;

INSERT INTO PERSON VALUES(7, 'RAMU', 35);

INSERT INTO PERSON(ID, FIRST_NAME) VALUES(8, 'MURALI');

INSERT INTO PERSON(ID, AGE) VALUES(9, 45);

INSERT INTO PERSON(FIRST_NAME, AGE) VALUES('MOHAN', 45);

SELECT * FROM PERSON;

INSERT INTO PERSON(AGE) VALUES(45);

INSERT INTO PERSON(AGE, ID) VALUES(45, 12);

INSERT INTO PERSON(AGE, ID, FIRST_NAME) VALUES(48, 13, 'RAGHU');

INSERT INTO PERSON(AGE,FIRST_NAME, ID) VALUES(48,'RUPA', 14);

SELECT * FROM PERSON;

UPDATE PERSON SET FIRST_NAME = 'RAVI' WHERE ID = 5;

UPDATE PERSON SET FIRST_NAME = 'RAMANA', AGE = 33 WHERE ID = 6;

UPDATE PERSON SET ID = 25, AGE = 38 WHERE ID = 7;

UPDATE PERSON SET AGE = 28 WHERE AGE IS NULL;

UPDATE PERSON SET AGE = 38 WHERE FIRST_NAME IS NOT NULL;

UPDATE PERSON SET FIRST_NAME = 'ANU' WHERE ID > 4;

SELECT * FROM PERSON;
UPDATE PERSON SET AGE = 22, ID = 10 WHERE ID <= 7;

UPDATE PERSON SET AGE = 42, ID = 15;

DELETE FROM PERSON WHERE ID = 6;

DELETE FROM PERSON WHERE FIRST_NAME = 'KUMAR';

DELETE FROM PERSON WHERE FIRST_NAME = 'ANU';

SELECT * FROM PERSON;

DELETE FROM PERSON;

CREATE TABLE EMPLOYEE(ID NUMBER, FIRST_NAME VARCHAR2(90),
LAST_NAME VARCHAR2(90), AGE NUMBER, SALARY NUMBER, EMAIL VARCHAR2(90));

INSERT INTO EMPLOYEE VALUES(1, 'RAMU', 'BTM', 22, 4000, 'R@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(2, 'RAVI', 'RAO', 24, 3000, 'RA@GMAIL.IN');
INSERT INTO EMPLOYEE VALUES(3, 'MANU', 'BTM', 23, 5000, 'M@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(4, 'MURALI', 'RAO', 26, 55000, 'MU@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(5, 'PAVAN', 'KUMAR', 28, 55000, 'PA@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(6, 'ANU', 'JP', 21, 6000, 'ANU@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(7, 'SWETHA', 'RAO', 29, 56000, 'SW@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(8, 'SUNITHA', 'JD', 32, 7000, 'SU@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(9, 'KIRAN', 'RAO', 32, 7000, 'KI@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(10, 'RAGHU', 'JD', 25, 2000, 'MU@GMAIL.COM');

SELECT * FROM EMPLOYEE;

SELECT * FROM EMPLOYEE WHERE ID = 5;

SELECT * FROM EMPLOYEE WHERE ID > 5;

SELECT * FROM EMPLOYEE WHERE AGE BETWEEN 22 AND 28;

SELECT * FROM EMPLOYEE WHERE AGE NOT BETWEEN 22 AND 28;

SELECT * FROM EMPLOYEE WHERE SALARY IN(4000, 5500, 7000); 

SELECT * FROM EMPLOYEE WHERE SALARY = 5500;

SELECT * FROM EMPLOYEE WHERE SALARY NOT IN(4000, 5500, 7000);

SELECT * FROM EMPLOYEE WHERE FIRST_NAME LIKE '%R%'

SELECT AGE, FIRST_NAME FROM EMPLOYEE;

SELECT AGE, FIRST_NAME, EMAIL FROM EMPLOYEE;

SELECT FIRST_NAME AS MYNAME, AGE, LAST_NAME AS MYLNAME FROM EMPLOYEE;

SELECT FIRST_NAME MYNAME, AGE, LAST_NAME MYLNAME FROM EMPLOYEE;

SELECT COUNT(*) FROM EMPLOYEE;

SELECT COUNT(*) AS RECORDS_COUNT FROM EMPLOYEE;

SELECT COUNT(*) AS "RECORDS COUNT" FROM EMPLOYEE;

SELECT COUNT(*) "RECORDS COUNT" FROM EMPLOYEE;

SELECT * FROM EMPLOYEE;

SELECT COUNT(AGE) "RECORDS COUNT" FROM EMPLOYEE;

UPDATE EMPLOYEE SET AGE = NULL WHERE ID = 2;

SELECT COUNT(AGE) "RECORDS COUNT" FROM EMPLOYEE;

SELECT COUNT(LAST_NAME) "RECORDS COUNT" FROM EMPLOYEE;

SELECT MAX(SALARY) FROM EMPLOYEE;

SELECT MIN(SALARY) FROM EMPLOYEE;

SELECT MAX(AGE) FROM EMPLOYEE;

SELECT MIN(AGE) FROM EMPLOYEE;

SELECT MAX(SALARY) AS "MAX SALARY" FROM EMPLOYEE;

SELECT MAX(SALARY) "MAX SALARY" FROM EMPLOYEE;

SELECT AVG(AGE) "AVG AGE" FROM EMPLOYEE;

SELECT AVG(SALARY) "AVG SALARY" FROM EMPLOYEE;

SELECT MAX(FIRST_NAME) FROM EMPLOYEE;

SELECT MIN(FIRST_NAME) FROM EMPLOYEE;

SELECT * FROM EMPLOYEE ORDER BY FIRST_NAME;

SELECT * FROM EMPLOYEE ORDER BY AGE;

SELECT * FROM EMPLOYEE ORDER BY AGE, SALARY;


//SELECT FIRST_NAME, MAX(SALARY) FROM EMPLOYEE;

SELECT * FROM EMPLOYEE;

                                                  //56000  
SELECT FIRST_NAME FROM EMPLOYEE WHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYEE);

SELECT FIRST_NAME FROM EMPLOYEE WHERE AGE = (SELECT MAX(AGE) FROM EMPLOYEE);

SELECT FIRST_NAME FROM EMPLOYEE WHERE AGE = (SELECT MIN(AGE) FROM EMPLOYEE);

SELECT MAX(SALARY) FROM EMPLOYEE WHERE SALARY < (SELECT MAX(SALARY) FROM EMPLOYEE);


SELECT MAX(SALARY) FROM EMPLOYEE WHERE SALARY < (SELECT MAX(SALARY) FROM EMPLOYEE WHERE
SALARY < (SELECT MAX(SALARY) FROM EMPLOYEE));

//7000 <(55000)<(56000)

SELECT FIRST_NAME FROM EMPLOYEE WHERE SALARY =
(SELECT MAX(SALARY) FROM EMPLOYEE WHERE SALARY < (SELECT MAX(SALARY) FROM EMPLOYEE WHERE
SALARY < (SELECT MAX(SALARY) FROM EMPLOYEE)));


SELECT FIRST_NAME FROM EMPLOYEE WHERE SALARY = 
(SELECT MIN(SALARY) FROM EMPLOYEE WHERE SALARY > (SELECT MIN(SALARY) FROM EMPLOYEE WHERE
SALARY > (SELECT MIN(SALARY) FROM EMPLOYEE)));


// RAMU = 4000 > 3000 > 2000


SELECT ID, FIRST_NAME, LAST_NAME, AGE, SALARY, EMAIL, RANK() OVER (ORDER BY SALARY DESC)
RANK FROM EMPLOYEE;

SELECT ID, FIRST_NAME, LAST_NAME, AGE, SALARY, EMAIL, RANK() OVER (ORDER BY SALARY DESC)
RANKED FROM EMPLOYEE;

SELECT * FROM (SELECT ID, FIRST_NAME, LAST_NAME, AGE, SALARY, EMAIL, RANK() OVER
(ORDER BY SALARY) RANK FROM EMPLOYEE);

SELECT * FROM (SELECT ID, FIRST_NAME, LAST_NAME, AGE, SALARY, EMAIL, RANK() OVER
(ORDER BY SALARY DESC) RANK FROM EMPLOYEE) WHERE RANK = 7;


SELECT * FROM EMPLOYEE;


INSERT INTO EMPLOYEE VALUES(1, 'RAMU', 'BTM', 22, 4000, 'R@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(2, 'RAVI', 'RAO', 24, 3000, 'RA@GMAIL.IN');
INSERT INTO EMPLOYEE VALUES(3, 'MANU', 'BTM', 23, 5000, 'M@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(4, 'MURALI', 'RAO', 26, 55000, 'MU@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(5, 'PAVAN', 'KUMAR', 28, 55000, 'PA@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(6, 'ANU', 'JP', 21, 6000, 'ANU@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(7, 'SWETHA', 'RAO', 29, 56000, 'SW@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(8, 'SUNITHA', 'JD', 32, 7000, 'SU@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(9, 'KIRAN', 'RAO', 32, 7000, 'KI@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(10, 'RAGHU', 'JD', 25, 2000, 'MU@GMAIL.COM');

INSERT INTO EMPLOYEE VALUES(1, 'RAMU', 'BTM', 22, 4000, 'R@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(2, 'RAVI', 'RAO', 24, 3000, 'RA@GMAIL.IN');
INSERT INTO EMPLOYEE VALUES(3, 'MANU', 'BTM', 23, 5000, 'M@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(4, 'MURALI', 'RAO', 26, 55000, 'MU@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(5, 'PAVAN', 'KUMAR', 28, 55000, 'PA@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(6, 'ANU', 'JP', 21, 6000, 'ANU@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(7, 'SWETHA', 'RAO', 29, 56000, 'SW@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(8, 'SUNITHA', 'JD', 32, 7000, 'SU@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(9, 'KIRAN', 'RAO', 32, 7000, 'KI@GMAIL.COM');
INSERT INTO EMPLOYEE VALUES(10, 'RAGHU', 'JD', 25, 2000, 'MU@GMAIL.COM');

SELECT * FROM EMPLOYEE;

//PAGINATION

SELECT ID, FIRST_NAME, LAST_NAME, AGE, EMAIL, SALARY, ROWNUM FROM EMPLOYEE;

SELECT * FROM EMPLOYEE WHERE ROWNUM BETWEEN 10 AND 20;

SELECT * FROM (SELECT ID, FIRST_NAME, LAST_NAME, AGE, EMAIL, SALARY, ROWNUM AS ROWNUMBER 
FROM EMPLOYEE) WHERE ROWNUM <= 10;

SELECT * FROM (SELECT ID, FIRST_NAME, LAST_NAME, AGE, EMAIL, SALARY, ROWNUM AS ROWNUMBER 
FROM EMPLOYEE) WHERE ROWNUMBER BETWEEN 11 AND 20;

SELECT * FROM (SELECT ID, FIRST_NAME, LAST_NAME, AGE, EMAIL, SALARY, ROWNUM AS ROWNUMBER 
FROM EMPLOYEE) WHERE ROWNUMBER BETWEEN 21 AND 30;

SELECT * FROM (SELECT ID, FIRST_NAME, LAST_NAME, AGE, EMAIL, SALARY, ROWNUM AS ROWNUMBER 
FROM EMPLOYEE);

SELECT DISTINCT ID, FIRST_NAME, LAST_NAME, AGE, EMAIL, SALARY FROM EMPLOYEE;

SELECT * FROM EMPLOYEE;

SELECT * FROM EMPLOYEE GROUP BY ID, FIRST_NAME, LAST_NAME, AGE, EMAIL, SALARY;




INSERT INTO EMPLOYEE VALUES(2, 'RAVI', 'RAO', 24, 3000, 'RA@GMAIL.IN');

UPDATE EMPLOYEE SET AGE = 27 WHERE AGE IS NULL;

DELETE FROM EMPLOYEE WHERE AGE = 27;

SELECT ID, FIRST_NAME, LAST_NAME, AGE, EMAIL, SALARY, ROWID FROM EMPLOYEE; 

SELECT MIN(ROWID) FROM EMPLOYEE;

SELECT MAX(ROWID) FROM EMPLOYEE;



DELETE FROM EMPLOYEE WHERE ROWID NOT IN
(SELECT MIN(ROWID) FROM EMPLOYEE GROUP BY  ID, FIRST_NAME, LAST_NAME, AGE, EMAIL, SALARY);

SELECT * FROM EMPLOYEE;

CREATE TABLE TAB1(ID NUMBER, NAME VARCHAR2(90), AGE NUMBER);

INSERT INTO TAB1(ID) VALUES(1);

SELECT * FROM TAB1;

INSERT INTO TAB1(ID, AGE) VALUES(2, 24);

INSERT INTO TAB1(NAME) VALUES('MANU');

INSERT INTO TAB1(AGE) VALUES(25);

CREATE TABLE TAB2(ID NUMBER, NAME VARCHAR2(90) NOT NULL, AGE NUMBER);

DESC TAB2;

INSERT INTO TAB2(ID) VALUES(1);

INSERT INTO TAB2(ID, NAME) VALUES(2, 'ABC');

SELECT * FROM TAB2;

INSERT INTO TAB2(AGE) VALUES(22);

INSERT INTO TAB2(NAME) VALUES('XYZ');


CREATE TABLE TAB3(ID NUMBER NOT NULL, NAME VARCHAR2(90) NOT NULL, AGE NUMBER);

DESC TAB3;

INSERT INTO TAB3(ID) VALUES(1);

INSERT INTO TAB3 (ID, NAME) VALUES(2, 'ABC');

INSERT INTO TAB3(NAME, AGE) VALUES('XYZ', 33);

INSERT INTO TAB3(NAME) VALUES('AAA');

INSERT INTO TAB3(AGE) VALUES(11);

CREATE TABLE TAB4(ID NUMBER, NAME VARCHAR2(90), AGE NUMBER);

INSERT INTO TAB4(ID, NAME) VALUES(1, 'MANU');
INSERT INTO TAB4(ID, NAME) VALUES(1, 'MANU');

SELECT * FROM TAB4

INSERT INTO TAB4(ID, NAME, AGE) VALUES(2, 'RAMU', 34);
INSERT INTO TAB4(ID, NAME, AGE) VALUES(2, 'RAMU', 34);

CREATE TABLE TAB5(ID NUMBER, NAME VARCHAR2(90) UNIQUE, AGE NUMBER);

INSERT INTO TAB5(ID, NAME) VALUES(1, 'MANU');

INSERT INTO TAB5(ID, NAME) VALUES(1, 'MANU');

INSERT INTO TAB5(ID, NAME, AGE) VALUES(2, 'RAMU', 22);

INSERT INTO TAB5(ID, NAME, AGE) VALUES(2, 'RAMU', 22);

SELECT * FROM TAB5;

INSERT INTO TAB5(NAME, AGE) VALUES('RAMU', 22);

INSERT INTO TAB5(ID, AGE) VALUES(1, 22);

INSERT INTO TAB5(ID, AGE) VALUES(1, 22);

CREATE TABLE TAB6(ID NUMBER, NAME VARCHAR2(90) UNIQUE, AGE NUMBER UNIQUE);

INSERT INTO TAB6(ID, NAME) VALUES(1, 'MANU');

INSERT INTO TAB6(ID, NAME) VALUES(1, 'MANU');

INSERT INTO TAB6(ID, NAME, AGE) VALUES(2, 'RAMU', 22);

INSERT INTO TAB6(ID, NAME, AGE) VALUES(2, 'RAMU', 22);

INSERT INTO TAB6(ID, AGE) VALUES(2, 22);

INSERT INTO TAB6(ID) VALUES(5);

INSERT INTO TAB6(AGE) VALUES(25);

SELECT * FROM TAB6;

CREATE TABLE TAB7(ID NUMBER, NAME VARCHAR2(90), AGE NUMBER, CONSTRAINT TAB7_UK1 UNIQUE(NAME),
CONSTRAINT TAB7_UK2 UNIQUE(AGE));

DESC TAB7;

INSERT INTO TAB7(ID, NAME) VALUES(1, 'MANU');

INSERT INTO TAB7(ID, NAME) VALUES(1, 'MANU');

INSERT INTO TAB7(ID, NAME, AGE) VALUES(2, 'RAMU', 22);

INSERT INTO TAB7(ID, NAME, AGE) VALUES(2, 'RAMU', 22);

INSERT INTO TAB7(NAME, AGE) VALUES('RAMU', 22);

INSERT INTO TAB7(ID, AGE) VALUES(2, 22);

INSERT INTO TAB7(ID) VALUES(2);

SELECT * FROM TAB7;

INSERT INTO TAB7(NAME, AGE) VALUES('ABC', 28);

CREATE TABLE TAB8(ID NUMBER, NAME VARCHAR2(90), AGE NUMBER, CONSTRAINT TAB8_UK1 UNIQUE
(NAME, AGE));

INSERT INTO TAB8(ID, NAME) VALUES(1, 'MANU');

INSERT INTO TAB8(ID, NAME) VALUES(1, 'MANU');

SELECT * FROM TAB8;

INSERT INTO TAB8(ID, NAME, AGE) VALUES(2, 'RAMU', 22);

INSERT INTO TAB8(ID, NAME, AGE) VALUES(2, 'RAMU', 22);

INSERT INTO TAB8(ID, NAME, AGE) VALUES(2, 'RAMU', 23);


INSERT INTO TAB8(ID, NAME, AGE) VALUES(2, 'ANU', 23);

SELECT * FROM TAB8;

INSERT INTO TAB8(ID, NAME, AGE) VALUES(2, 'ANU', 24);

INSERT INTO TAB8(NAME, AGE) VALUES('RAMU', 22);

INSERT INTO TAB8(ID, AGE) VALUES(5, 22);

SELECT * FROM TAB8;

INSERT INTO TAB8(ID, AGE) VALUES(5, 22);


INSERT INTO TAB8(ID) VALUES(5);
INSERT INTO TAB8(ID) VALUES(5);


CREATE TABLE TAB9(ID NUMBER, NAME VARCHAR2(90) PRIMARY KEY, AGE NUMBER);

INSERT INTO TAB9 (ID, NAME) VALUES(1, 'MANU');

INSERT INTO TAB9 (ID, NAME) VALUES(1, 'MANU');

INSERT INTO TAB9 (ID, AGE) VALUES(1, 22);

INSERT INTO TAB9 (ID, NAME, AGE) VALUES(2, 'RAMU', 22);

INSERT INTO TAB9 (ID, NAME, AGE) VALUES(2, 'RAMU', 22);

INSERT INTO TAB9 (NAME) VALUES('ANU');

SELECT * FROM TAB9;


CREATE TABLE TAB10(ID NUMBER, NAME VARCHAR2(90) PRIMARY KEY, AGE NUMBER PRIMARY KEY);

CREATE TABLE TAB11(ID NUMBER, NAME VARCHAR2(90), AGE NUMBER, CONSTRAINT TAB11_PK1 PRIMARY KEY
(AGE));

INSERT INTO TAB11(ID, NAME) VALUES(1, 'MANU');

INSERT INTO TAB11(ID, NAME, AGE) VALUES(2, 'RAMU', 22);

INSERT INTO TAB11(ID, NAME, AGE) VALUES(2, 'RAMU', 22);

INSERT INTO TAB11(ID, NAME, AGE) VALUES(2, 'RAMU', 28);

INSERT INTO TAB11(ID, AGE) VALUES(1, 22);

INSERT INTO TAB11(ID, AGE) VALUES(1, 28);

INSERT INTO TAB11(NAME) VALUES('VIJAY');

SELECT * FROM TAB11;

CREATE TABLE TAB12(ID NUMBER, NAME VARCHAR2(90), AGE NUMBER, CONSTRAINT TAB12_PK1 PRIMARY KEY
(AGE, NAME));

DESC TAB12;

INSERT INTO TAB12 VALUES(1, 'ABC', 22);

INSERT INTO TAB12 VALUES(1, 'ABC', 22);

INSERT INTO TAB12 VALUES(1, 'ABC', 23);

INSERT INTO TAB12 (ID) VALUES(1);

SELECT * FROM TAB12;

INSERT INTO TAB12(ID, NAME) VALUES(5, 'XYZ');

//WE CANT ABLE TO CREATE COMPOSITE NOT NULL
CREATE TABLE TAB13(ID NUMBER, NAME VARCHAR2(90), AGE NUMBER, CONSTRAINT TAB13_NN1 NOT NULL
(NAME, AGE));

//COMPOSITE UNIQUE IS POSSIBLE
CREATE TABLE TAB14(ID NUMBER, NAME VARCHAR2(90), AGE NUMBER, CONSTRAINT TAB8_UK14 UNIQUE
(NAME, AGE));

INSERT INTO TAB14(ID, NAME, AGE) VALUES(1, 'ABC', 22);

INSERT INTO TAB14(ID, NAME, AGE) VALUES(1, 'ABC', 22);

INSERT INTO TAB14(ID) VALUES(1);

INSERT INTO TAB14(ID) VALUES(1);

SELECT * FROM TAB14;

INSERT INTO TAB14(ID, NAME) VALUES(1, 'XYZ');

INSERT INTO TAB14(ID, NAME) VALUES(1, 'XYZ');

INSERT INTO TAB14(ID) VALUES(1);


//FOREIGN KEY
CREATE TABLE STUDENT(ID NUMBER UNIQUE, FIRST_NAME VARCHAR2(90),
LAST_NAME VARCHAR2(90), AGE NUMBER, EMAIL VARCHAR2(90));


CREATE TABLE ADDRESS(HOUSE_NO VARCHAR2(90), STREET_NAME VARCHAR2(90), CITY VARCHAR2(90),
STATE VARCHAR2(90), STUDENT_ID NUMBER, CONSTRAINT ADDRESS_FK1 FOREIGN KEY(STUDENT_ID)
REFERENCES STUDENT(ID));

DESC ADDRESS;

INSERT INTO STUDENT VALUES(1, 'RAMU', 'B', 22, 'R@R.COM');
INSERT INTO ADDRESS VALUES('123/B', 'BTM', 'BLR', 'KAR', 1);

INSERT INTO STUDENT VALUES(2, 'MANU', 'B', 24, 'M@M.COM');
INSERT INTO ADDRESS VALUES('124/C', 'JPN', 'BLR', 'KAR', 2);

INSERT INTO STUDENT VALUES(3, 'VIJAY', 'B', 26, 'V@V.COM');
INSERT INTO ADDRESS VALUES('123/V', 'JN', 'BLR', 'KAR', 3);


INSERT INTO STUDENT VALUES(4, 'MURALI', 'B', 26, 'M@M.COM');
INSERT INTO ADDRESS VALUES('123/V', 'JN', 'BLR', 'KAR', 4);

DELETE FROM STUDENT WHERE ID = 4;

DELETE FROM ADDRESS WHERE STUDENT_ID = 4;
DELETE FROM STUDENT WHERE ID = 4;

DROP TABLE STUDENT;

DELETE FROM ADDRESS;
DROP TABLE STUDENT;

DROP TABLE ADDRESS;
DROP TABLE STUDENT;



CREATE TABLE STUDENT(ID NUMBER UNIQUE, FIRST_NAME VARCHAR2(90),
LAST_NAME VARCHAR2(90), AGE NUMBER, EMAIL VARCHAR2(90));


CREATE TABLE ADDRESS(HOUSE_NO VARCHAR2(90), STREET_NAME VARCHAR2(90), CITY VARCHAR2(90),
STATE VARCHAR2(90), STUDENT_ID NUMBER, CONSTRAINT ADDRESS_FK1 FOREIGN KEY(STUDENT_ID)
REFERENCES STUDENT(ID));


INSERT INTO STUDENT VALUES(1, 'RAMU', 'B', 22, 'R@GMAIL.COM');

INSERT INTO ADDRESS(HOUSE_NO, STREET_NAME, CITY, STATE) VALUES('123/T', 'BTM', 'BLR', 'KAR');

UPDATE ADDRESS SET STUDENT_ID = 3 WHERE HOUSE_NO = '123/T';

SELECT * FROM STUDENT; 

UPDATE ADDRESS SET STUDENT_ID = 1 WHERE HOUSE_NO = '123/T';

SELECT * FROM ADDRESS;

INSERT INTO STUDENT(FIRST_NAME, LAST_NAME, AGE, EMAIL) VALUES('MANU', 'B', 22, 'R@GMAIL.COM');

INSERT INTO ADDRESS(HOUSE_NO, STREET_NAME, CITY, STATE) VALUES('123/Y', 'BTM', 'BLR', 'KAR');


UPDATE STUDENT SET ID = 2 WHERE FIRST_NAME = 'MANU';

UPDATE ADDRESS SET STUDENT_ID = 2 WHERE HOUSE_NO = '123/Y';

SELECT * FROM STUDENT;

//ONE-TO-ONE
DROP TABLE PERSON;

CREATE TABLE PERSON(ID NUMBER PRIMARY KEY, FIRST_NAME VARCHAR2(90), 
LAST_NAME VARCHAR2(90), AGE NUMBER);

DROP TABLE ADDRESS;

CREATE TABLE ADDRESS(HOUSE_NO VARCHAR2(90), STREET_NAME VARCHAR2(90), CITY VARCHAR2(90),
STATE VARCHAR2(90), PERSON_ID NUMBER UNIQUE, CONSTRAINTS ADDRESS_FK1 FOREIGN KEY(PERSON_ID)
REFERENCES PERSON(ID));


INSERT INTO PERSON VALUES(1, 'RAMU', 'ABC', 22);
INSERT INTO PERSON VALUES(2, 'MANU', 'XYZ', 24);
INSERT INTO PERSON VALUES(3, 'SWETHA', 'TEST', 21);
INSERT INTO PERSON VALUES(4, 'KUMAR', 'BLR', 23);
INSERT INTO PERSON VALUES(5, 'MURALI', 'BLR', 23);

SELECT * FROM PERSON;
INSERT INTO ADDRESS VALUES('123/B', 'BTM', 'BLR', 'KAR', 1);
INSERT INTO ADDRESS VALUES('123/C', 'JP', 'BLR', 'KAR', 1);//ERROR

INSERT INTO ADDRESS VALUES('123/D', 'JP', 'BLR', 'KAR', 2);

INSERT INTO ADDRESS VALUES('123/E', 'NR', 'BLR', 'KAR', 3);

INSERT INTO ADDRESS(HOUSE_NO, STREET_NAME, CITY, STATE) VALUES('123/E', 'NR', 'BLR', 'KAR');



INSERT INTO ADDRESS VALUES('123/F', 'JP', 'BLR', 'KAR', 4);

INSERT INTO ADDRESS VALUES('123/G', 'JP', 'BLR', 'KAR', 5);

INSERT INTO ADDRESS VALUES('123/H', 'JP', 'BLR', 'KAR', 6);//ERROR

INSERT INTO ADDRESS VALUES('123/H', 'JP', 'BLR', 'KAR', 5);//ERROR

INSERT INTO ADDRESS(HOUSE_NO, STREET_NAME, CITY, STATE) VALUES('123/Y', 'BTM', 'BLR', 'KAR');

SELECT * FROM ADDRESS;

SELECT * FROM PERSON WHERE FIRST_NAME = 'RAMU';
SELECT * FROM ADDRESS WHERE HOUSE_NO = '123/B';

//
SELECT * FROM ADDRESS WHERE PERSON_ID = (SELECT ID FROM PERSON WHERE FIRST_NAME = 'RAMU');

SELECT * FROM PERSON WHERE ID = (SELECT PERSON_ID FROM ADDRESS WHERE HOUSE_NO = '123/E');

SELECT * FROM ADDRESS;

SELECT * FROM PERSON, ADDRESS WHERE PERSON.ID = ADDRESS.PERSON_ID;

SELECT * FROM PERSON P, ADDRESS A WHERE P.ID = A.PERSON_ID;

SELECT * FROM PERSON P INNER JOIN ADDRESS A ON P.ID = A.PERSON_ID;

SELECT * FROM PERSON P LEFT OUTER JOIN ADDRESS A ON P.ID = A.PERSON_ID;

SELECT * FROM PERSON;

SELECT * FROM PERSON P RIGHT OUTER JOIN ADDRESS A ON P.ID = A.PERSON_ID;

SELECT * FROM PERSON P FULL OUTER JOIN ADDRESS A ON P.ID = A.PERSON_ID;


//ONE-TO-MANY

DROP TABLE PERSON CASCADE CONSTRAINTS;

CREATE TABLE PERSON(ID NUMBER PRIMARY KEY, FIRST_NAME VARCHAR2(90), 
LAST_NAME VARCHAR2(90), AGE NUMBER);

CREATE TABLE MAIL_ACCOUNT(USERNAME VARCHAR2(90), PASSWORD VARCHAR2(90), PROVIDER VARCHAR2(90),
PERSON_ID NUMBER, CONSTRAINT MA_FK1 FOREIGN KEY(PERSON_ID) REFERENCES PERSON(ID));

INSERT INTO PERSON VALUES(1, 'RAMU', 'ABC', 22);
INSERT INTO PERSON VALUES(2, 'MANU', 'XYZ', 24);
INSERT INTO PERSON VALUES(3, 'SWETHA', 'TEST', 21);
INSERT INTO PERSON VALUES(4, 'KUMAR', 'BLR', 23);
INSERT INTO PERSON VALUES(5, 'MURALI', 'BLR', 23);

INSERT INTO MAIL_ACCOUNT VALUES('RAMU', 'XYZ', 'GMAIL', 1);
INSERT INTO MAIL_ACCOUNT VALUES('RAMU', 'XYZ', 'GMAIL', 1);
INSERT INTO MAIL_ACCOUNT VALUES('RAMU', 'XYZ', 'HOTMAIL', 1);

INSERT INTO MAIL_ACCOUNT VALUES('MANU', 'XYZ', 'HOTMAIL', 2);
INSERT INTO MAIL_ACCOUNT VALUES('MANU', 'XYZ', 'GMAIL', 2);
SELECT * FROM MAIL_ACCOUNT;

INSERT INTO MAIL_ACCOUNT VALUES('SWETHA', 'XYZ', 'GMAIL', 3);
INSERT INTO MAIL_ACCOUNT VALUES('KUMAR', 'XYZ', 'GMAIL', 4);

INSERT INTO MAIL_ACCOUNT(USERNAME, PASSWORD, PROVIDER) VALUES('USER1', 'XYZ', 'GMAIL');

SELECT * FROM PERSON;
SELECT * FROM MAIL_ACCOUNT;

INSERT INTO MAIL_ACCOUNT(USERNAME, PASSWORD, PROVIDER) VALUES('USER2', 'XYZ', 'HOTMAIL');

SELECT * FROM PERSON WHERE FIRST_NAME = 'RAMU';
SELECT * FROM MAIL_ACCOUNT WHERE USERNAME = 'RAMU';

UPDATE MAIL_ACCOUNT SET PROVIDER = 'YAHOO' WHERE PROVIDER = 'GMAIL'; 

SELECT ROWID, PROVIDER FROM MAIL_ACCOUNT;
UPDATE MAIL_ACCOUNT SET PROVIDER = 'OUTLOOK' WHERE ROWID = 'AAAE6HAABAAALIRAAB'; 

SELECT * FROM MAIL_ACCOUNT WHERE USERNAME = 'RAMU';

CREATE TABLE TEST(ID NUMBER, NAME VARCHAR(90), AGE NUMBER);

INSERT INTO TEST VALUES(1, 'ABC', 22);
INSERT INTO TEST VALUES(1, 'ABC', 22);
INSERT INTO TEST VALUES(1, 'ABC', 22);

SELECT * FROM TEST;

SELECT ROWID, NAME FROM TEST;

UPDATE TEST SET NAME = 'XYZ' WHERE ROWID = 'AAAE6IAABAAALIZAAC';

SELECT * FROM PERSON, MAIL_ACCOUNT WHERE PERSON.ID = MAIL_ACCOUNT.PERSON_ID;

SELECT * FROM PERSON P INNER JOIN MAIL_ACCOUNT M ON P.ID = M.PERSON_ID;

SELECT * FROM PERSON P LEFT OUTER JOIN MAIL_ACCOUNT M ON P.ID = M.PERSON_ID;

SELECT * FROM PERSON P RIGHT OUTER JOIN MAIL_ACCOUNT M ON P.ID = M.PERSON_ID;

SELECT * FROM PERSON P FULL OUTER JOIN MAIL_ACCOUNT M ON P.ID = M.PERSON_ID;


//MANY TO MANY

DROP TABLE STUDENT CASCADE CONSTRAINTS;

CREATE TABLE STUDENT(ID NUMBER UNIQUE, FIRST_NAME VARCHAR2(90), LAST_NAME VARCHAR2(90)); 

CREATE TABLE SKILL(ID NUMBER UNIQUE, NAME VARCHAR2(90));

INSERT INTO STUDENT VALUES(1, 'RAMU', 'B');
INSERT INTO STUDENT VALUES(2, 'MANU', 'C');
INSERT INTO STUDENT VALUES(3, 'MURALI', 'D');
INSERT INTO STUDENT VALUES(4, 'KUMAR', 'E');

INSERT INTO SKILL VALUES(1, 'C');
INSERT INTO SKILL VALUES(2, 'C++');
INSERT INTO SKILL VALUES(3, 'JAVA');
INSERT INTO SKILL VALUES(4, 'ORACLE');

SELECT * FROM SKILL;

CREATE TABLE STUDENT_SKILL(STUDENT_ID NUMBER, SKILL_ID NUMBER,
CONSTRAINT SS_FK1 FOREIGN KEY(STUDENT_ID) REFERENCES STUDENT(ID),
CONSTRAINT SS_FK2 FOREIGN KEY(SKILL_ID) REFERENCES SKILL(ID));

INSERT INTO STUDENT_SKILL VALUES(1, 1);
INSERT INTO STUDENT_SKILL VALUES(1, 2);
INSERT INTO STUDENT_SKILL VALUES(2, 2);
INSERT INTO STUDENT_SKILL VALUES(3, 1);
INSERT INTO STUDENT_SKILL VALUES(3, 4);

SELECT * FROM STUDENT_SKILL;

SELECT NAME FROM SKILL WHERE ID IN(SELECT SKILL_ID FROM STUDENT_SKILL WHERE STUDENT_ID =
(SELECT ID FROM STUDENT WHERE FIRST_NAME = 'MURALI'));

SELECT FIRST_NAME FROM STUDENT WHERE ID IN
(SELECT STUDENT_ID FROM STUDENT_SKILL WHERE SKILL_ID =
(SELECT ID FROM SKILL WHERE NAME = 'C'));

SELECT * FROM STUDENT, STUDENT_SKILL, SKILL WHERE
STUDENT.ID = STUDENT_SKILL.STUDENT_ID AND STUDENT_SKILL.SKILL_ID = SKILL.ID;

SELECT * FROM STUDENT S INNER JOIN STUDENT_SKILL SS ON
S.ID = SS.STUDENT_ID INNER JOIN SKILL SK ON SS.SKILL_ID = SK.ID;

SELECT * FROM STUDENT S LEFT OUTER JOIN STUDENT_SKILL SS ON
S.ID = SS.STUDENT_ID LEFT OUTER JOIN SKILL SK ON SS.SKILL_ID = SK.ID;

SELECT * FROM STUDENT S RIGHT OUTER JOIN STUDENT_SKILL SS ON
S.ID = SS.STUDENT_ID RIGHT OUTER JOIN SKILL SK ON SS.SKILL_ID = SK.ID;

//TIME STAMP

MM	==>	Month	(01-12)
MON	==>	Month in the abrrivated (JAN, FEB, ...)
MONTH	==>	Name of the Month
YY	==>	Year (14, 15)
YYYY	==>	Year (2014, 2015)
DD	==>	Day of the month.
HH24	==>	Hour of the day(0-23)
HH12	==>	Hour of the day(1-12)
HH	==>	Hour of the day(1-12)

AM, PM		==>	|
A.M, P.M	==>	|	Meridian Indicator

MI		==>	Minute (0-59)
SS		==>	Second(0-59)
FF		==>	Milliseconds (0-999)
note: all the above letters are case in-sensitive
--------------------------------------------



create table t1(sno number, name varchar2(90), dob date, doj timestamp);

desc t1;

insert into t1 values(1, 'abc', sysdate, sysdate);

select * from t1;

insert into t1 values(2, 'xyz', to_date('1990/12/25', 'YYYY/MM/DD'),
                                to_date('2014/03/25', 'YYYY/MM/DD'));
                                
insert into t1 values(3, 'xyz', to_date('1990-12-25', 'YYYY-MM-DD'),
                                to_date('2014-23-05', 'YYYY-DD-MM'));
                                
                                
insert into t1 values(4, 'xyz', to_date('19901225', 'YYYYMMDD'),
                                to_date('20142305', 'YYYYDDMM'));

select * from t1;
insert into t1 values(5, 'xyz', to_date('1990-JAN-25', 'YYYY-MON-DD'),
                                to_date('2014-23-JUL', 'YYYY-DD-MON'));
                                
insert into t1 values(6, 'xyz', to_date('1990-JULY-25', 'YYYY-MONTH-DD'),
                                to_date('2014-23-MARCH', 'YYYY-DD-MONTH'));
                                
                                
insert into t1 values(7, 'xyz', '31-MAR-98','22-APR-14');  //default DD-MON-YY








insert into t1 values(8, 'xyz', to_date('1998/05/20:13:25:48','YYYY/MM/DD:HH24:MI:SS'),
                                to_date('2013/25/10:03:25:48AM','YYYY/DD/MM:HH:MI:SSAM'));
                                
select * from t1;                 
insert into t1 values(9, 'xyz', to_date('1998/05/20:10:25:48PM','YYYY/MM/DD:HH12:MI:SSPM'),
                                to_date('2013/25/10:03:25:48AM','YYYY/DD/MM:HH:MI:SSAM'));





insert into t1 values(10, 'xyz', to_date('1998/05/20:10:25:48PM','YYYY/MM/DD:HH12:MI:SSPM'),
                                to_timestamp('2013/25/10:03:25:48AM','YYYY/DD/MM:HH:MI:SSAM'));
select * from t1;                
insert into t1 values(11, 'xyz', to_date('1990-JULY-25', 'YYYY-MONTH-DD'),
                                to_timestamp('2014-23-MARCH', 'YYYY-DD-MONTH'));
                                
insert into t1 values(12, 'xyz', to_date('1990.JULY.25', 'YYYY.MONTH.DD'),
                                to_timestamp('2014 23 MARCH', 'YYYY DD MONTH'));

select * from t1;











insert into t1 values(13, 'xyz', to_date('1998/05/20-10-25-48PM','YYYY/MM/DD-HH12-MI-SSPM'),
                                to_timestamp('2013/25/10.03.25.48AM','YYYY/DD/MM.HH.MI.SSAM'));
                                
select * from t1;                   
insert into t1 values(14, 'xyz', to_date('1998/05/20-10-25-48PM','YYYY/MM/DD-HH12-MI-SSPM'),
                                to_timestamp('2013/25/10.03.25.48.999AM','YYYY/DD/MM.HH.MI.SS.FF.AM'));

select * from t1;

insert into t1 values(2, 'xyz', to_date('1998/05/20-10-25-48.550PM','YYYY/MM/DD-HH12-MI-SS.FFPM'),
                  to_timestamp('2013/25/10.03.25.48.520AM','YYYY/DD/MM.HH.MI.SS.FF.AM'));                                
// ERROR . to_date wont support milliseconds.

select * from t1;  // observe the dafault date out put and time stamp output.

select to_char(dob, 'YYYY/MM/DD') as dob, 
       to_char(doj, 'YYYY/MM/DD') as doj from t1;
       
       
select to_char(dob ,'YYYY/MM/DD-HH12-MI-SSPM') as dob,
       to_char(doj,'YYYY/DD/MM.HH.MI.SSAM') as doj from t1;
       
       
select to_char(dob, 'YYYY-MONTH-DD') as dob,
       to_char(doj, 'YYYY-DD-MONTH') as doj from t1;









select * from t1 where dob > doj;

select dob, doj from t1;



select * from t1 where doj > dob;


select * from t1 where dob > '25-DEC-90';


select * from t1 where dob BETWEEN '25-DEC-90' AND '20-MAR-99';
select * from t1 where dob = to_date('1990/12/25', 'YYYY/MM/DD');
select * from t1 where dob > to_date('1990/12/25', 'YYYY/MM/DD');

select * from t1 where dob between 
to_date('1990/01/01', 'YYYY/MM/DD') and 
to_date('2000/01/01', 'YYYY/MM/DD');


create table t2(sno int, name varchar(90), sal int, dept varchar(90));

insert into t2 values(1, 'ramu', 20000, 'sw');
insert into t2 values(2, 'manu', 30000, 'sw');
insert into t2 values(3, 'pavan', 25000, 'sw');
insert into t2 values(4, 'kiran', 40000, 'hw');
insert into t2 values(5, 'naveen', 35000, 'hw');
insert into t2 values(6, 'chenna', 38000, 'hw');

select * from t2;


select * from t2 order by dept;

select * from t2 order by dept desc;

select dept, count(*) as total_emp from t2 group by dept;

select dept, sum(sal) from t2 group by dept;

select dept, max(sal) from t2 group by dept;

select dept, min(sal) from t2 group by dept;
select dept, avg(sal) from t2 group by dept;










----------
CREATE TABLE EMP(ID INT, NAME VARCHAR(90), DOB DATE);
INSERT INTO EMP VALUES(1, 'RAMU', '12-JAN-92');
INSERT INTO EMP VALUES(2, 'MANU', '12-FEB-92');
INSERT INTO EMP VALUES(3, 'VIJAY', '15-JAN-92');
INSERT INTO EMP VALUES(4, 'MANJU', '20-JAN-92');
INSERT INTO EMP VALUES(5, 'MANOJ', '15-NOV-94');
INSERT INTO EMP VALUES(6, 'NAVEEN', '22-AUG-91');


INSERT INTO EMP VALUES(7, 'NARESH', TO_DATE('12-JAN-92 8.30', 'DD-MON-YY HH.MI'));
INSERT INTO EMP VALUES(8, 'NARAYANA', TO_DATE('12-DEC-95 18.30:45', 'DD-MON-YY HH24.MI:SS'));
INSERT INTO EMP VALUES(9, 'PAVAN', TO_DATE('30-DEC-92 5.30 AM : 45', 'DD-MON-YY HH.MI AM : SS'));
INSERT INTO EMP VALUES(10, 'PRAVEEN', TO_DATE('30-DEC-92 5.30 PM : 45', 'DD-MON-YY HH.MI PM : SS'));
INSERT INTO EMP VALUES(11, 'PRAVEEN', TO_DATE('20-AUGUST-92 5.30 PM : 45', 'DD-MONTH-YY HH.MI PM : SS'));
INSERT INTO EMP VALUES(12, 'SWATHI', TO_DATE('20-JULY-92 7.30 PM : 45', 'DD-MONTH-YY HH.MI PM : SS'));





SELECT * FROM EMP;

SELECT NAME, TO_CHAR(DOB, 'DD') AS DAY FROM EMP WHERE TO_CHAR(DOB, 'DD') > 15;
SELECT NAME, TO_CHAR(DOB, 'MON') AS MONTH FROM EMP;
SELECT NAME, TO_CHAR(DOB, 'MONTH') AS MONTH FROM EMP;
SELECT NAME, TO_CHAR(DOB, 'MM') AS MONTH FROM EMP;

select * from emp;

SELECT DOB, NAME, TO_CHAR(DOB, 'MONTH') AS MONTH FROM EMP WHERE TO_CHAR(DOB, 'DD') > 15;

SELECT DOB, NAME, TO_CHAR(DOB, 'MONTH') AS MONTH FROM EMP WHERE TO_CHAR(DOB, 'DD') <= 15;

SELECT DOB, NAME, TO_CHAR(DOB, 'MONTH') AS MONTH FROM EMP WHERE TO_CHAR(DOB, 'MM') > 5;

SELECT DOB, NAME, TO_CHAR(DOB, 'MONTH') AS MONTH FROM EMP WHERE TO_CHAR(DOB, 'MM') <= 5;

SELECT DOB, NAME, TO_CHAR(DOB, 'MONTH') AS MONTH FROM EMP WHERE TO_CHAR(DOB, 'MON') = 'JAN';


SELECT NAME, TO_CHAR(DOB, 'MONTH') AS MONTH FROM EMP WHERE 
						TO_CHAR(DOB, 'MONTH') LIKE '%RY%';





SELECT DOB, NAME, TO_CHAR(DOB, 'HH') AS HOUR FROM EMP;

SELECT DOB, NAME, TO_CHAR(DOB, 'HH24') AS HOUR FROM EMP;

SELECT NAME, TO_CHAR(DOB, 'HH12') AS HOUR FROM EMP;

SELECT NAME, TO_CHAR(DOB, 'HH AM') AS HOUR FROM EMP;
SELECT NAME, TO_CHAR(DOB, 'HH PM') AS HOUR FROM EMP;
SELECT DOB, NAME, TO_CHAR(DOB, 'HH AM') HOUR FROM EMP WHERE TO_CHAR(DOB, 'HH24') > 10;
SELECT NAME, TO_CHAR(DOB, 'HH AM') HOUR FROM EMP WHERE TO_CHAR(DOB, 'HH24')  < 7;


SELECT DOB, NAME, TO_CHAR(DOB, 'HH PM') HOUR FROM EMP WHERE TO_CHAR(DOB, 'HH PM')  LIKE '%AM%';

SELECT DOB, NAME, TO_CHAR(DOB, 'HH AM') HOUR FROM EMP;

SELECT NAME, TO_CHAR(DOB, 'YY') YEAR FROM EMP;
SELECT NAME, TO_CHAR(DOB, 'YYYY') YEAR FROM EMP;
SELECT NAME, TO_CHAR(DOB, 'YY') YEAR FROM EMP  WHERE TO_CHAR(DOB, 'YY')  < 93;
SELECT NAME, TO_CHAR(DOB, 'YY') YEAR FROM EMP  WHERE TO_CHAR(DOB, 'YY')  >= 95;
SELECT NAME, TO_CHAR(DOB, 'YY') YEAR FROM EMP  WHERE TO_CHAR(DOB, 'YY')  BETWEEN 92 AND 94;
SELECT NAME FROM EMP  WHERE TO_CHAR(DOB, 'DD.MM.YY') = '12.01.92';
SELECT NAME FROM EMP  WHERE TO_CHAR(DOB, 'DD.MM.YY') > '12.01.92';
SELECT NAME FROM EMP  WHERE TO_CHAR(DOB, 'DD-MM-YY') = '12-01-92';


INF:
----


employee
--------
sno	name	age	skills
---	----	---	------
1	ramu	22	C, C++
2	manu	23	C, Java
3	mohan	25	C, C++, Java
4	pavan	77	C, Oracle

employee
--------

sno	name	age	
---	----	---	
1	ramu	22	
2	manu	23	
3	mohan	25	
4	pavan	77	

skill_table
------
C
C++
java
oracle


employee_skill
--------------

emp_sno		skill
-------		-----
1		C
1		C++
2		C
2		java
3		C
3		C++
3		java
4		C
4		oracle



2NF


trainer
-------
t_id		Name		age		subject
----		----		---		-------
1		manu		28		Maths
1		manu		28		Physics
2		Ramu		38		Maths
2		Ramu		38		Physics

TRAINER
-------
t_id	name	age
----	----	---
1	Manu	28
1	Manu	28
2	Ramu	38
2	Ramu	38


TRAINER_SUBJECT
---------------
t_id	subject
----	-------
1	Maths
1	Physics
2	Maths
2	Physics


3nf

CREATE TABLE CUSTOMERS(
   CUST_ID       NUMBER NOT NULL PRIMARY KEY,
   CUST_NAME     VARCHAR2 (20)      NOT NULL,
   DOB           DATE,
   STREET        VARCHAR2(200),
   CITY          VARCHAR2(100),
   STATE         VARCHAR2(100),
   ZIP           VARCHAR2(12),
   EMAIL_ID      VARCHAR2(256)
);





CREATE TABLE ADDRESS(
   ZIP           VARCHAR2(12) PRIMARY KEY,
   STREET        VARCHAR2(200),
   CITY          VARCHAR2(100),
   STATE         VARCHAR2(100)
);



CREATE TABLE CUSTOMERS(
   CUST_ID       NUMBER              NOT NULL,
   CUST_NAME     VARCHAR2 (20)      NOT NULL,
   DOB           DATE,
   ZIP           VARCHAR2(12) UNIQUE,
   EMAIL_ID      VARCHAR2(256),
   CONSTRAINT CS_FK1 FOREIGN KEY (ZIP) REFERENCES ADDRESS(ZIP)
);
























































































































